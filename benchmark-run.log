
> @adobe/rum-distiller@1.19.0 benchmark
> node test/benchmarks/index.js --report=md


╔════════════════════════════════════════════════════════════╗
║   RUM Distiller Performance Benchmark Suite                ║
╚════════════════════════════════════════════════════════════╝


=== Filtering Performance Benchmarks ===

Generating small dataset (1k bundles)...
Benchmarking: 1k bundles, 1 filter...
Benchmarking: 1k bundles, 3 filters...
Benchmarking: 1k bundles, 5 filters...

Generating medium dataset (10k bundles)...
Benchmarking: 10k bundles, 1 filter...
Benchmarking: 10k bundles, 3 filters...
Benchmarking: 10k bundles, 5 filters...

Generating large dataset (50k bundles)...
Benchmarking: 50k bundles, 1 filter...
Benchmarking: 50k bundles, 3 filters...
Benchmarking: 50k bundles, 5 filters...

Generating high-match dataset (90% match rate)...
Benchmarking: 10k bundles, high selectivity (90%)...

Generating low-match dataset (10% match rate)...
Benchmarking: 10k bundles, low selectivity (10%)...

=== Benchmark Results ===

Name                               Avg (ms)    Min (ms)    Max (ms)    Median (ms)
-------------------------------------------------------------------------------------
1k_1filter                         6.59        3.31        12.03       3.43
1k_3filters                        7.89        5.89        10.90       7.93
1k_5filters                        5.32        3.96        7.55        4.52
10k_1filter                        26.84       17.85       47.93       23.74
10k_3filters                       31.47       29.37       37.68       29.81
10k_5filters                       30.89       30.26       32.29       30.57
50k_1filter                        101.09      91.80       121.46      94.82
50k_3filters                       158.84      155.92      163.26      157.21
50k_5filters                       157.47      153.54      160.25      158.22
10k_90%_match                      23.63       19.15       37.53       20.22
10k_10%_match                      24.90       18.63       34.66       25.59

=== Performance Budget Results ===

PASSES:
  ✅ 1k_1filter                     6.59ms ≤ 10ms (3.41ms margin)
  ✅ 1k_3filters                    7.89ms ≤ 15ms (7.11ms margin)
  ✅ 1k_5filters                    5.32ms ≤ 20ms (14.68ms margin)
  ✅ 10k_1filter                    26.84ms ≤ 50ms (23.16ms margin)
  ✅ 10k_3filters                   31.47ms ≤ 75ms (43.53ms margin)
  ✅ 10k_5filters                   30.89ms ≤ 100ms (69.11ms margin)
  ✅ 50k_1filter                    101.09ms ≤ 200ms (98.91ms margin)
  ✅ 50k_3filters                   158.84ms ≤ 300ms (141.16ms margin)
  ✅ 50k_5filters                   157.47ms ≤ 400ms (242.53ms margin)
  ✅ 10k_90%_match                  23.63ms ≤ 50ms (26.37ms margin)
  ✅ 10k_10%_match                  24.90ms ≤ 50ms (25.10ms margin)

Total: 11 passed, 0 failed

=== Facet Extraction Performance Benchmarks ===

Benchmarking simple facets...
  - userAgent facet...
  - checkpoint facet...
  - plainURL facet...

Benchmarking complex facets...
  - url facet (with PII removal)...
  - vitals facet (with scoring)...
  - enterSource facet (with classification)...
  - acquisitionSource facet...

Benchmarking cache effectiveness...
  - Repeated url computation (3x)...
  - Repeated vitals computation (3x)...

Benchmarking unique vs repeated values...
  - url facet on skewed dataset (80% repeated)...

=== Benchmark Results ===

Name                               Avg (ms)    Min (ms)    Max (ms)    Median (ms)
-------------------------------------------------------------------------------------
simple_userAgent                   13.43       6.33        28.03       8.64
simple_checkpoint                  26.32       23.37       29.69       26.30
simple_plainURL                    28.06       24.61       34.91       26.54
complex_url                        24.50       21.41       30.28       22.59
complex_vitals                     5.06        3.53        6.67        5.05
complex_enterSource                100.28      88.24       138.71      91.05
complex_acquisitionSource          27.41       23.82       33.40       27.04
cached_url_3x                      0.00        0.00        0.00        0.00
cached_vitals_3x                   0.00        0.00        0.00        0.00
repeated_url_skewed                29.09       19.70       62.14       21.63

=== Cache Hit Rate Analysis ===

simple_userAgent               0.0%
simple_checkpoint              0.0%
simple_plainURL                0.0%
complex_url                    0.0%
complex_vitals                 0.0%
complex_enterSource            0.0%
complex_acquisitionSource      0.0%
repeated_url_skewed            0.0%

=== Performance Budget Results ===


Total: 0 passed, 0 failed

=== Grouping Performance Benchmarks ===

Generating datasets with varying group counts...

Benchmarking: 2 groups (few groups)...

❌ Benchmark suite failed:
TypeError: groupByFn is not a function
    at file:///root/repo/distiller.js:77:17
    at Array.reduce (<anonymous>)
    at DataChunks.group (file:///root/repo/distiller.js:714:36)
    at benchmarkGrouping (file:///root/repo/test/benchmarks/grouping.bench.js:44:28)
    at runGroupingBenchmarks (file:///root/repo/test/benchmarks/grouping.bench.js:143:16)
    at runAllBenchmarks (file:///root/repo/test/benchmarks/index.js:75:35)
